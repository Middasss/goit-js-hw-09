{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAXQO,SAASC,cAAc,SA2C/BC,iBAAiB,UA5BLC,IACjBA,EAAMC,iBAEN,MACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEJC,EAAUC,OAAOL,EAAMM,OACvBC,EAAWF,OAAOH,EAAOI,OACzBE,EAASH,OAAOJ,EAAKK,OAE3B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAUE,IAC5BxB,EAAcwB,EAAI,EAAGL,EAAUI,EAASC,GACrCC,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBC,UAGzC2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB7B,QAAeC,UAK3CU,EAAMM,cAAca","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst submitForm = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const delayEl = Number(delay.value);\n  const amountEl = Number(amount.value);\n  const stepEl = Number(step.value);\n\n  for (let i = 0; i < amountEl; i++) {\n    createPromise(i + 1, delayEl + stepEl * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  event.currentTarget.reset();\n};\n\nformEl.addEventListener('submit', submitForm);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayEl","Number","value","amountEl","stepEl","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.e1249628.js.map"}